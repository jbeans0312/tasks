
> react-typescript-starter@0.1.0 test
> react-scripts test "--coverage"

PASS src/nested.test.ts
  ‚óè Console

    console.log
      OG Questions

      at editOption (src/nested.ts:249:13)

    console.log
      [
        {
          id: 1,
          name: 'Question 1',
          body: '',
          type: 'multiple_choice_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 47,
          name: 'My New Question',
          body: '',
          type: 'multiple_choice_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 2,
          name: 'Question 2',
          body: '',
          type: 'short_answer_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        }
      ]

      at editOption (src/nested.ts:250:13)

    console.log
      newQ

      at editOp (src/nested.ts:259:17)
          at Array.map (<anonymous>)

    console.log
      {
        id: 1,
        name: 'Question 1',
        body: '',
        type: 'multiple_choice_question',
        options: [ 'NEW OPTION' ],
        expected: '',
        points: 1,
        published: false
      }

      at editOp (src/nested.ts:260:17)
          at Array.map (<anonymous>)

    console.log
      
      editedQuestions

      at editOption (src/nested.ts:270:13)

    console.log
      [
        {
          id: 1,
          name: 'Question 1',
          body: '',
          type: 'multiple_choice_question',
          options: [ 'NEW OPTION' ],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 47,
          name: 'My New Question',
          body: '',
          type: 'multiple_choice_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 2,
          name: 'Question 2',
          body: '',
          type: 'short_answer_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        }
      ]

      at editOption (src/nested.ts:271:13)

    console.log
      OG Questions

      at editOption (src/nested.ts:249:13)

    console.log
      [
        {
          id: 1,
          name: 'Question 1',
          body: '',
          type: 'multiple_choice_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 47,
          name: 'My New Question',
          body: '',
          type: 'multiple_choice_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 2,
          name: 'Question 2',
          body: '',
          type: 'short_answer_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        }
      ]

      at editOption (src/nested.ts:250:13)

    console.log
      newQ

      at editOp (src/nested.ts:259:17)
          at Array.map (<anonymous>)

    console.log
      {
        id: 47,
        name: 'My New Question',
        body: '',
        type: 'multiple_choice_question',
        options: [ 'Another option' ],
        expected: '',
        points: 1,
        published: false
      }

      at editOp (src/nested.ts:260:17)
          at Array.map (<anonymous>)

    console.log
      
      editedQuestions

      at editOption (src/nested.ts:270:13)

    console.log
      [
        {
          id: 1,
          name: 'Question 1',
          body: '',
          type: 'multiple_choice_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 47,
          name: 'My New Question',
          body: '',
          type: 'multiple_choice_question',
          options: [ 'Another option' ],
          expected: '',
          points: 1,
          published: false
        },
        {
          id: 2,
          name: 'Question 2',
          body: '',
          type: 'short_answer_question',
          options: [],
          expected: '',
          points: 1,
          published: false
        }
      ]

      at editOption (src/nested.ts:271:13)

    console.log
      OG Questions

      at editOption (src/nested.ts:249:13)

    console.log
      [
        {
          id: 1,
          name: 'Addition',
          body: 'What is 2+2?',
          type: 'short_answer_question',
          options: [],
          expected: '4',
          points: 1,
          published: true
        },
        {
          id: 2,
          name: 'Letters',
          body: 'What is the last letter of the English alphabet?',
          type: 'short_answer_question',
          options: [],
          expected: 'Z',
          points: 1,
          published: false
        },
        {
          id: 5,
          name: 'Colors',
          body: 'Which of these is a color?',
          type: 'multiple_choice_question',
          options: [ 'red', 'apple', 'firetruck' ],
          expected: 'red',
          points: 1,
          published: true
        },
        {
          id: 9,
          name: 'Shapes',
          body: 'What shape can you make with one line?',
          type: 'multiple_choice_question',
          options: [ 'square', 'triangle', 'circle' ],
          expected: 'circle',
          points: 2,
          published: false
        }
      ]

      at editOption (src/nested.ts:250:13)

    console.log
      newQ

      at editOp (src/nested.ts:259:17)
          at Array.map (<anonymous>)

    console.log
      {
        id: 5,
        name: 'Colors',
        body: 'Which of these is a color?',
        type: 'multiple_choice_question',
        options: [ 'red', 'apple', 'firetruck', 'newspaper' ],
        expected: 'red',
        points: 1,
        published: true
      }

      at editOp (src/nested.ts:260:17)
          at Array.map (<anonymous>)

    console.log
      
      editedQuestions

      at editOption (src/nested.ts:270:13)

    console.log
      [
        {
          id: 1,
          name: 'Addition',
          body: 'What is 2+2?',
          type: 'short_answer_question',
          options: [],
          expected: '4',
          points: 1,
          published: true
        },
        {
          id: 2,
          name: 'Letters',
          body: 'What is the last letter of the English alphabet?',
          type: 'short_answer_question',
          options: [],
          expected: 'Z',
          points: 1,
          published: false
        },
        {
          id: 5,
          name: 'Colors',
          body: 'Which of these is a color?',
          type: 'multiple_choice_question',
          options: [ 'red', 'apple', 'firetruck', 'newspaper' ],
          expected: 'red',
          points: 1,
          published: true
        },
        {
          id: 9,
          name: 'Shapes',
          body: 'What shape can you make with one line?',
          type: 'multiple_choice_question',
          options: [ 'square', 'triangle', 'circle' ],
          expected: 'circle',
          points: 2,
          published: false
        }
      ]

      at editOption (src/nested.ts:271:13)

    console.log
      OG Questions

      at editOption (src/nested.ts:249:13)

    console.log
      [
        {
          id: 1,
          name: 'Addition',
          body: 'What is 2+2?',
          type: 'short_answer_question',
          options: [],
          expected: '4',
          points: 1,
          published: true
        },
        {
          id: 2,
          name: 'Letters',
          body: 'What is the last letter of the English alphabet?',
          type: 'short_answer_question',
          options: [],
          expected: 'Z',
          points: 1,
          published: false
        },
        {
          id: 5,
          name: 'Colors',
          body: 'Which of these is a color?',
          type: 'multiple_choice_question',
          options: [ 'red', 'apple', 'firetruck' ],
          expected: 'red',
          points: 1,
          published: true
        },
        {
          id: 9,
          name: 'Shapes',
          body: 'What shape can you make with one line?',
          type: 'multiple_choice_question',
          options: [ 'square', 'triangle', 'circle' ],
          expected: 'circle',
          points: 2,
          published: false
        }
      ]

      at editOption (src/nested.ts:250:13)

    console.log
      newQ

      at editOp (src/nested.ts:259:17)
          at Array.map (<anonymous>)

    console.log
      {
        id: 5,
        name: 'Colors',
        body: 'Which of these is a color?',
        type: 'multiple_choice_question',
        options: [ 'newspaper', 'apple', 'firetruck' ],
        expected: 'red',
        points: 1,
        published: true
      }

      at editOp (src/nested.ts:260:17)
          at Array.map (<anonymous>)

    console.log
      
      editedQuestions

      at editOption (src/nested.ts:270:13)

    console.log
      [
        {
          id: 1,
          name: 'Addition',
          body: 'What is 2+2?',
          type: 'short_answer_question',
          options: [],
          expected: '4',
          points: 1,
          published: true
        },
        {
          id: 2,
          name: 'Letters',
          body: 'What is the last letter of the English alphabet?',
          type: 'short_answer_question',
          options: [],
          expected: 'Z',
          points: 1,
          published: false
        },
        {
          id: 5,
          name: 'Colors',
          body: 'Which of these is a color?',
          type: 'multiple_choice_question',
          options: [ 'newspaper', 'apple', 'firetruck' ],
          expected: 'red',
          points: 1,
          published: true
        },
        {
          id: 9,
          name: 'Shapes',
          body: 'What shape can you make with one line?',
          type: 'multiple_choice_question',
          options: [ 'square', 'triangle', 'circle' ],
          expected: 'circle',
          points: 2,
          published: false
        }
      ]

      at editOption (src/nested.ts:271:13)

    console.log
      OG Questions

      at editOption (src/nested.ts:249:13)

    console.log
      [
        {
          id: 1,
          name: 'Addition',
          body: 'What is 2+2?',
          type: 'short_answer_question',
          options: [],
          expected: '4',
          points: 1,
          published: true
        },
        {
          id: 2,
          name: 'Letters',
          body: 'What is the last letter of the English alphabet?',
          type: 'short_answer_question',
          options: [],
          expected: 'Z',
          points: 1,
          published: false
        },
        {
          id: 5,
          name: 'Colors',
          body: 'Which of these is a color?',
          type: 'multiple_choice_question',
          options: [ 'red', 'apple', 'firetruck' ],
          expected: 'red',
          points: 1,
          published: true
        },
        {
          id: 9,
          name: 'Shapes',
          body: 'What shape can you make with one line?',
          type: 'multiple_choice_question',
          options: [ 'square', 'triangle', 'circle' ],
          expected: 'circle',
          points: 2,
          published: false
        }
      ]

      at editOption (src/nested.ts:250:13)

    console.log
      newQ

      at editOp (src/nested.ts:259:17)
          at Array.map (<anonymous>)

    console.log
      {
        id: 5,
        name: 'Colors',
        body: 'Which of these is a color?',
        type: 'multiple_choice_question',
        options: [ 'red', 'apple', 'newspaper' ],
        expected: 'red',
        points: 1,
        published: true
      }

      at editOp (src/nested.ts:260:17)
          at Array.map (<anonymous>)

    console.log
      
      editedQuestions

      at editOption (src/nested.ts:270:13)

    console.log
      [
        {
          id: 1,
          name: 'Addition',
          body: 'What is 2+2?',
          type: 'short_answer_question',
          options: [],
          expected: '4',
          points: 1,
          published: true
        },
        {
          id: 2,
          name: 'Letters',
          body: 'What is the last letter of the English alphabet?',
          type: 'short_answer_question',
          options: [],
          expected: 'Z',
          points: 1,
          published: false
        },
        {
          id: 5,
          name: 'Colors',
          body: 'Which of these is a color?',
          type: 'multiple_choice_question',
          options: [ 'red', 'apple', 'newspaper' ],
          expected: 'red',
          points: 1,
          published: true
        },
        {
          id: 9,
          name: 'Shapes',
          body: 'What shape can you make with one line?',
          type: 'multiple_choice_question',
          options: [ 'square', 'triangle', 'circle' ],
          expected: 'circle',
          points: 2,
          published: false
        }
      ]

      at editOption (src/nested.ts:271:13)

PASS src/arrays.test.ts
PASS src/objects.test.ts
PASS src/components/StartAttempt.test.tsx
PASS src/components/TwoDice.test.tsx
FAIL src/form-components/MultipleChoiceQuestion.test.tsx
  ‚óè MultipleChoiceQuestion Component tests ‚Ä∫ Can choose the correct answer and then incorrect

    TestingLibraryElementError: Unable to find an element with the text: /‚ùå/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mMultiple Choice Question[0m
          [36m</h3>[39m
          [36m<div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"form-label"[39m
                [33mfor[39m=[32m"multipleChoiceQuestions"[39m
              [36m>[39m
                [0mChoose an answer![0m
              [36m</label>[39m
              [36m<select[39m
                [33mclass[39m=[32m"form-select"[39m
                [33mid[39m=[32m"multipleChoiceQuestions"[39m
              [36m>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"1"[39m
                [36m>[39m
                  [0m1[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"2"[39m
                [36m>[39m
                  [0m2[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"3"[39m
                [36m>[39m
                  [0m3[0m
                [36m</option>[39m
              [36m</select>[39m
            [36m</div>[39m
            [0m‚úîÔ∏è[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      48 |         expect(screen.queryByText(/‚ùå/i)).not.toBeInTheDocument();
      49 |         userEvent.selectOptions(select, "3");
    > 50 |         expect(screen.getByText(/‚ùå/i)).toBeInTheDocument();
         |                       ^
      51 |         expect(screen.queryByText(/‚úîÔ∏è/i)).not.toBeInTheDocument();
      52 |     });
      53 |     test("Can start off initially correct", () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/MultipleChoiceQuestion.test.tsx:50:23)

PASS src/bad-components/ChooseTeam.test.tsx
PASS src/bad-components/DoubleHalf.test.tsx
PASS src/functions.test.ts
PASS src/form-components/CheckAnswer.test.tsx
PASS src/form-components/EditMode.test.tsx
PASS src/components/ChangeType.test.tsx
PASS src/components/CycleHoliday.test.tsx
FAIL src/form-components/GiveAttempts.test.tsx
  ‚óè GiveAttempts Component tests ‚Ä∫ You can gain arbitrary attempts

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/gain/i`

    Here are the accessible roles:

      heading:

      Name "Give Attempts":
      [36m<h3 />[39m

      --------------------------------------------------
      spinbutton:

      Name "Request Attempts":
      [36m<input[39m
        [33mclass[39m=[32m"form-control"[39m
        [33mid[39m=[32m"updateRequestAttempts"[39m
        [33mtype[39m=[32m"number"[39m
        [33mvalue[39m=[32m"0"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Use":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Add":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div>[39m
            [36m<span>[39m
              [0m3[0m
            [36m</span>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"form-label"[39m
                [33mfor[39m=[32m"updateRequestAttempts"[39m
              [36m>[39m
                [0mRequest Attempts[0m
              [36m</label>[39m
              [36m<input[39m
                [33mclass[39m=[32m"form-control"[39m
                [33mid[39m=[32m"updateRequestAttempts"[39m
                [33mtype[39m=[32m"number"[39m
                [33mvalue[39m=[32m"0"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mUse[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mAdd[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      28 |     });
      29 |     test("You can gain arbitrary attempts", () => {
    > 30 |         const gain = screen.getByRole("button", { name: /gain/i });
         |                             ^
      31 |         const amountToGive = screen.getByRole("spinbutton");
      32 |         userEvent.type(amountToGive, "10");
      33 |         gain.click();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:30:29)

  ‚óè GiveAttempts Component tests ‚Ä∫ Cannot gain blank amounts

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/gain/i`

    Here are the accessible roles:

      heading:

      Name "Give Attempts":
      [36m<h3 />[39m

      --------------------------------------------------
      spinbutton:

      Name "Request Attempts":
      [36m<input[39m
        [33mclass[39m=[32m"form-control"[39m
        [33mid[39m=[32m"updateRequestAttempts"[39m
        [33mtype[39m=[32m"number"[39m
        [33mvalue[39m=[32m"0"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Use":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Add":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div>[39m
            [36m<span>[39m
              [0m3[0m
            [36m</span>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"form-label"[39m
                [33mfor[39m=[32m"updateRequestAttempts"[39m
              [36m>[39m
                [0mRequest Attempts[0m
              [36m</label>[39m
              [36m<input[39m
                [33mclass[39m=[32m"form-control"[39m
                [33mid[39m=[32m"updateRequestAttempts"[39m
                [33mtype[39m=[32m"number"[39m
                [33mvalue[39m=[32m"0"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mUse[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mAdd[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      38 |     });
      39 |     test("Cannot gain blank amounts", () => {
    > 40 |         const gain = screen.getByRole("button", { name: /gain/i });
         |                             ^
      41 |         const amountToGive = screen.getByRole("spinbutton");
      42 |         fireEvent.change(amountToGive, { target: { value: "" } });
      43 |         gain.click();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:40:29)

PASS src/form-components/ChangeColor.test.tsx
PASS src/components/Counter.test.tsx
PASS src/components/RevealAnswer.test.tsx
PASS src/bad-components/ColoredBox.test.tsx
PASS src/bad-components/ShoveBox.test.tsx
PASS src/App.test.tsx
-----------------------------|---------|----------|---------|---------|-------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------------------|---------|----------|---------|---------|-------------------
All files                    |   98.52 |    96.51 |   98.49 |   98.46 |                   
 src                         |     100 |      100 |     100 |     100 |                   
  App.tsx                    |     100 |      100 |     100 |     100 |                   
  arrays.ts                  |     100 |      100 |     100 |     100 |                   
  functions.ts               |     100 |      100 |     100 |     100 |                   
  nested.ts                  |     100 |      100 |     100 |     100 |                   
  objects.ts                 |     100 |      100 |     100 |     100 |                   
 src/bad-components          |     100 |       50 |     100 |     100 |                   
  ChooseTeam.tsx             |     100 |       50 |     100 |     100 | 18                
  ColoredBox.tsx             |     100 |      100 |     100 |     100 |                   
  DoubleHalf.tsx             |     100 |      100 |     100 |     100 |                   
  ShoveBox.tsx               |     100 |      100 |     100 |     100 |                   
 src/components              |     100 |      100 |     100 |     100 |                   
  ChangeType.tsx             |     100 |      100 |     100 |     100 |                   
  Counter.tsx                |     100 |      100 |     100 |     100 |                   
  CycleHoliday.tsx           |     100 |      100 |     100 |     100 |                   
  RevealAnswer.tsx           |     100 |      100 |     100 |     100 |                   
  StartAttempt.tsx           |     100 |      100 |     100 |     100 |                   
  TwoDice.tsx                |     100 |      100 |     100 |     100 |                   
 src/form-components         |   88.23 |    83.33 |    91.3 |   88.23 |                   
  ChangeColor.tsx            |     100 |      100 |     100 |     100 |                   
  CheckAnswer.tsx            |     100 |      100 |     100 |     100 |                   
  EditMode.tsx               |     100 |      100 |     100 |     100 |                   
  GiveAttempts.tsx           |      60 |        0 |   66.66 |      60 | 31,43-45          
  MultipleChoiceQuestion.tsx |     100 |      100 |     100 |     100 |                   
 src/interfaces              |       0 |        0 |       0 |       0 |                   
  answer.ts                  |       0 |        0 |       0 |       0 |                   
  question.ts                |       0 |        0 |       0 |       0 |                   
-----------------------------|---------|----------|---------|---------|-------------------

Test Suites: 2 failed, 18 passed, 20 total
Tests:       3 failed, 131 passed, 134 total
Snapshots:   0 total
Time:        12.5 s
Ran all test suites.
